name: Run tests
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  unit-tests:
      name: Unit tests
      runs-on: ubuntu-latest
      container: mbedos/mbed-os-env:latest
      steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Install dependencies
          run: |
            apt-get update && apt-get install -y valgrind gcovr
            pip3 install virtualenv

        - name: Boostrap of environment
          run: |
            ./scripts/bootstrap.sh

        - name: Build
          run: ./tests/UNITTESTS/build.sh

        - name: Run
          run: ./tests/UNITTESTS/run.sh

        - name: Upload coverage result
          uses: actions/upload-artifact@v2
          with:
            name: gcovr coverage result
            path: tests/UNITTESTS/coverage.html

  integration-tests:
    name: Integration tests
    runs-on: ubuntu-latest
    container: mbedos/mbed-os-env:latest
    steps:
      - name: Install dependencies
        run: |
          apt-get update
          apt-get install -y lavacli curl

      - name: launch lava job
        env:
          LAVA_SERVER_TOKEN: ${{ secrets.LAVA_SERVER_TOKEN }}
          LAVA_SERVER_URL: ${{ secrets.LAVA_SERVER_URL }}
          USER_TOKEN: ${{ secrets.USER_TOKEN }}
          SHA: ${{ github.event.pull_request.head.sha || github.sha }}
          REPOSITORY: paul-szczepanek-arm/mbed-os-experimental-ble-services
        run: |
          git clone https://github.com/ARMmbed/mbed-os-lava-scripts.git mbed-os-lava-scripts
          lavacli identities add --uri "$LAVA_SERVER_URL" --username lava-admin --token "$LAVA_SERVER_TOKEN" default
          cd mbed-os-lava-scripts/jobs
          ./launch_job.sh services_test.yaml ${REPOSITORY} ${SHA} ${USER_TOKEN}
          curl --user ${USER_TOKEN} -H "POST" https://api.github.com/repos/${REPOSITORY}/statuses/${SHA} -d "{\"state\": \"pending\", \"context\": \"lava-test\" }"

